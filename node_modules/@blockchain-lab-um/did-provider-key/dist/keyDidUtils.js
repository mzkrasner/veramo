import { MULTICODEC_CODE_TO_NAME } from '@blockchain-lab-um/utils';
import { MULTICODEC_NAME_TO_KEY_TYPE, } from './types/keyDidTypes.js';
export const checkDidComponents = (did) => {
    const components = did.split(':');
    if (components.length === 3) {
        components.splice(2, 0, '1');
    }
    const [scheme, method, version, multibaseValue] = components;
    if (components.length !== 4 && components.length !== 3) {
        throw new Error('invalidDid: invalid number of components');
    }
    if (scheme !== 'did' || method !== 'key') {
        throw new Error('invalidDid: invalid scheme or method');
    }
    const parsedVersion = parseInt(version, 10);
    if (Number.isNaN(parsedVersion) || parsedVersion <= 0) {
        throw new Error('invalidDid: invalid version');
    }
    if (multibaseValue.length === 0 || !multibaseValue.startsWith('z')) {
        throw new Error('invalidDid: invalid multibase value');
    }
    const didComponents = {
        scheme,
        method,
        version,
        multibaseValue,
    };
    return didComponents;
};
export const getKeyType = (code) => {
    const codecName = MULTICODEC_CODE_TO_NAME[`0x${code.toString(16)}`];
    if (!codecName) {
        throw new Error('invalidDid: invalid key type');
    }
    const keyType = MULTICODEC_NAME_TO_KEY_TYPE[codecName];
    if (!keyType) {
        throw new Error('invalidDid: invalid key type');
    }
    return keyType;
};
export const getContext = (keyType) => {
    switch (keyType) {
        case 'Ed25519': {
            return [
                'https://w3id.org/security/suites/ed25519-2020/v1',
                'https://w3id.org/security/suites/x25519-2020/v1',
            ];
        }
        case 'Secp256k1': {
            return [
                'https://w3id.org/security#EcdsaSecp256k1VerificationKey2019',
                'https://w3id.org/security#publicKeyJwk',
            ];
        }
        default: {
            throw new Error('invalidDid: invalid key type');
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5RGlkVXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMva2V5RGlkVXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFbkUsT0FBTyxFQUdMLDJCQUEyQixHQUM1QixNQUFNLHdCQUF3QixDQUFDO0FBRWhDLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLENBQUMsR0FBVyxFQUFpQixFQUFFO0lBQy9ELE1BQU0sVUFBVSxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEMsSUFBSSxVQUFVLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtRQUMzQixVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7S0FDOUI7SUFFRCxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsY0FBYyxDQUFDLEdBQUcsVUFBVSxDQUFDO0lBRTdELElBQUksVUFBVSxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksVUFBVSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDdEQsTUFBTSxJQUFJLEtBQUssQ0FBQywwQ0FBMEMsQ0FBQyxDQUFDO0tBQzdEO0lBRUQsSUFBSSxNQUFNLEtBQUssS0FBSyxJQUFJLE1BQU0sS0FBSyxLQUFLLEVBQUU7UUFDeEMsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0tBQ3pEO0lBRUQsTUFBTSxhQUFhLEdBQUcsUUFBUSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUM1QyxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksYUFBYSxJQUFJLENBQUMsRUFBRTtRQUNyRCxNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixDQUFDLENBQUM7S0FDaEQ7SUFFRCxJQUFJLGNBQWMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNsRSxNQUFNLElBQUksS0FBSyxDQUFDLHFDQUFxQyxDQUFDLENBQUM7S0FDeEQ7SUFFRCxNQUFNLGFBQWEsR0FBa0I7UUFDbkMsTUFBTTtRQUNOLE1BQU07UUFDTixPQUFPO1FBQ1AsY0FBYztLQUNmLENBQUM7SUFFRixPQUFPLGFBQWEsQ0FBQztBQUN2QixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxJQUFZLEVBQVcsRUFBRTtJQUNsRCxNQUFNLFNBQVMsR0FBRyx1QkFBdUIsQ0FBQyxLQUFLLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRXBFLElBQUksQ0FBQyxTQUFTLEVBQUU7UUFDZCxNQUFNLElBQUksS0FBSyxDQUFDLDhCQUE4QixDQUFDLENBQUM7S0FDakQ7SUFFRCxNQUFNLE9BQU8sR0FBRywyQkFBMkIsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUV2RCxJQUFJLENBQUMsT0FBTyxFQUFFO1FBQ1osTUFBTSxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO0tBQ2pEO0lBRUQsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLENBQUMsT0FBZ0IsRUFBWSxFQUFFO0lBQ3ZELFFBQVEsT0FBTyxFQUFFO1FBQ2YsS0FBSyxTQUFTLENBQUMsQ0FBQztZQUNkLE9BQU87Z0JBQ0wsa0RBQWtEO2dCQUNsRCxpREFBaUQ7YUFDbEQsQ0FBQztTQUNIO1FBQ0QsS0FBSyxXQUFXLENBQUMsQ0FBQztZQUNoQixPQUFPO2dCQUNMLDZEQUE2RDtnQkFDN0Qsd0NBQXdDO2FBQ3pDLENBQUM7U0FDSDtRQUNELE9BQU8sQ0FBQyxDQUFDO1lBQ1AsTUFBTSxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO1NBQ2pEO0tBQ0Y7QUFDSCxDQUFDLENBQUMifQ==