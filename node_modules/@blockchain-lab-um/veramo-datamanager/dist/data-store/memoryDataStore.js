import jsonpath from 'jsonpath';
import { v4 } from 'uuid';
import { AbstractDataStore, } from './abstractDataStore.js';
export class MemoryDataStore extends AbstractDataStore {
    constructor() {
        super(...arguments);
        this.data = {};
    }
    async save(args) {
        const id = v4();
        this.data[id] = args.data;
        return id;
    }
    async delete(args) {
        const { id } = args;
        if (id in this.data) {
            delete this.data[id];
            return true;
        }
        return false;
    }
    async query(args) {
        const { filter } = args;
        if (filter && filter.type === 'id') {
            try {
                if (this.data[filter.filter]) {
                    const obj = [
                        {
                            metadata: { id: filter.filter },
                            data: this.data[filter.filter],
                        },
                    ];
                    return obj;
                }
                return [];
            }
            catch (e) {
                throw new Error('Invalid id');
            }
        }
        if (filter === undefined || (filter && filter.type === 'none')) {
            return Object.keys(this.data).map((k) => ({
                metadata: { id: k },
                data: this.data[k],
            }));
        }
        if (filter && filter.type === 'JSONPath') {
            const objects = Object.keys(this.data).map((k) => ({
                metadata: { id: k },
                data: this.data[k],
            }));
            const filteredObjects = jsonpath.query(objects, filter.filter);
            return filteredObjects;
        }
        return [];
    }
    async clear(args) {
        this.data = {};
        return true;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVtb3J5RGF0YVN0b3JlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2RhdGEtc3RvcmUvbWVtb3J5RGF0YVN0b3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sUUFBUSxNQUFNLFVBQVUsQ0FBQztBQUNoQyxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRTFCLE9BQU8sRUFDTCxpQkFBaUIsR0FLbEIsTUFBTSx3QkFBd0IsQ0FBQztBQUtoQyxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxpQkFBaUI7SUFBdEQ7O1FBQ1UsU0FBSSxHQUE0QixFQUFFLENBQUM7SUF3RDdDLENBQUM7SUF0RFEsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFlO1FBQy9CLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUMxQixPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7SUFFTSxLQUFLLENBQUMsTUFBTSxDQUFDLElBQWlCO1FBQ25DLE1BQU0sRUFBRSxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxFQUFFLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNuQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDckIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVNLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBaUI7UUFDbEMsTUFBTSxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQztRQUN4QixJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLElBQUksRUFBRTtZQUNsQyxJQUFJO2dCQUNGLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUU7b0JBQzVCLE1BQU0sR0FBRyxHQUFHO3dCQUNWOzRCQUNFLFFBQVEsRUFBRSxFQUFFLEVBQUUsRUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFOzRCQUMvQixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO3lCQUMvQjtxQkFDRixDQUFDO29CQUNGLE9BQU8sR0FBRyxDQUFDO2lCQUNaO2dCQUNELE9BQU8sRUFBRSxDQUFDO2FBQ1g7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDVixNQUFNLElBQUksS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO2FBQy9CO1NBQ0Y7UUFDRCxJQUFJLE1BQU0sS0FBSyxTQUFTLElBQUksQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLElBQUksS0FBSyxNQUFNLENBQUMsRUFBRTtZQUM5RCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDeEMsUUFBUSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRTtnQkFDbkIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2FBQ25CLENBQUMsQ0FBQyxDQUFDO1NBQ0w7UUFDRCxJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLFVBQVUsRUFBRTtZQUN4QyxNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0JBQ2pELFFBQVEsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUU7Z0JBQ25CLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzthQUNuQixDQUFDLENBQUMsQ0FBQztZQUNKLE1BQU0sZUFBZSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUMvRCxPQUFPLGVBQWlDLENBQUM7U0FDMUM7UUFDRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7SUFFTSxLQUFLLENBQUMsS0FBSyxDQUFDLElBQWlCO1FBQ2xDLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ2YsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0YifQ==