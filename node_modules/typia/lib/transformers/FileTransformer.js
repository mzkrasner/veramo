"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileTransformer = void 0;
var typescript_1 = __importDefault(require("typescript"));
var NodeTransformer_1 = require("./NodeTransformer");
var FileTransformer;
(function (FileTransformer) {
    FileTransformer.transform = function (project) {
        return function (context) {
            return function (file) {
                if (file.isDeclarationFile)
                    return file;
                return typescript_1.default.visitEachChild(file, function (node) { return iterate_node(project)(context)(node); }, context);
            };
        };
    };
    var iterate_node = function (project) {
        return function (context) {
            return function (node) {
                return typescript_1.default.visitEachChild(try_transform_node(project)(node), function (child) { return iterate_node(project)(context)(child); }, context);
            };
        };
    };
    var try_transform_node = function (project) {
        return function (node) {
            try {
                return NodeTransformer_1.NodeTransformer.transform(project)(node);
            }
            catch (exp) {
                if (!(exp instanceof Error))
                    throw exp;
                var file = node.getSourceFile();
                var _a = file.getLineAndCharacterOfPosition(node.pos), line = _a.line, character = _a.character;
                exp.message += " - ".concat(file.fileName, ":").concat(line + 1, ":").concat(character + 1);
                throw exp;
            }
        };
    };
})(FileTransformer || (exports.FileTransformer = FileTransformer = {}));
//# sourceMappingURL=FileTransformer.js.map